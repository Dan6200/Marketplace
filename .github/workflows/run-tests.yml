# cspell:disable
# View results on github.com
# gh CLI commands to view results
# [list workflows]:
# gh run list
# [show the latest results of a specific workflow]
# gh run list --workflow=<name_of_test_file>.yml -L 1
# [watch a workflow run]:
# gh run watch <run_id>
# [view details of a run]:
# gh run view <run_id>
# [Download artifacts of a run]:
# gh run download <run_id>
# [Rerun a workflow run]:
# gh run rerun <run_id>
# [Extract the run id]:
# run_id=$(gh run list --workflow=<name_of_test_file>.yml -L 1|awk -F'\t' '{print $7}') && echo $run_id

name: Thrift-app Testing

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - name: Run SQL script
        run: |
          docker run -e PGPASSWORD=postgres -v ${{ github.workspace }}:/scripts/ --network host postgres psql -h localhost -U postgres -d test -f /scripts/server/src/db/sql-scripts/create-table.sql

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm build
      - name: Start server
        run: |
          pnpm start-test &> results.log &
          sleep 5
        env:
          CI: true
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          JWT_LIFETIME: ${{ secrets.JWT_LIFETIME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PG_URL: 'postgres://postgres:postgres@localhost:5432/test'
          REDIS_URL: redis://localhost:6379
      - name: Run tests
        run: pnpm test
        env:
          CI: true
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          JWT_LIFETIME: ${{ secrets.JWT_LIFETIME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PG_URL: 'postgres://postgres:postgres@localhost:5432/test'
          REDIS_URL: redis://localhost:6379
          SERVER: localhost:1024
      - name: View results
        if: failure()
        run: cat results.log
